// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PBMsgHeroHouseList.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PBMsgHeroHouseList.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PBMsgHeroHouseList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMsgHeroHouseList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBMsgHeroHouseList_PBMsgSkillActived_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMsgHeroHouseList_PBMsgSkillActived_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBMsgHeroHouseList_PBMsgHero_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMsgHeroHouseList_PBMsgHero_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PBMsgHeroHouseList_PBMsgHeroStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_PBMsgHeroHouseList_2eproto() {
  protobuf_AddDesc_PBMsgHeroHouseList_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PBMsgHeroHouseList.proto");
  GOOGLE_CHECK(file != NULL);
  PBMsgHeroHouseList_descriptor_ = file->message_type(0);
  static const int PBMsgHeroHouseList_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList, herohouseslots_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList, opennedslot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList, unlockslotdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList, hero_),
  };
  PBMsgHeroHouseList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBMsgHeroHouseList_descriptor_,
      PBMsgHeroHouseList::default_instance_,
      PBMsgHeroHouseList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBMsgHeroHouseList));
  PBMsgHeroHouseList_PBMsgSkillActived_descriptor_ = PBMsgHeroHouseList_descriptor_->nested_type(0);
  static const int PBMsgHeroHouseList_PBMsgSkillActived_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgSkillActived, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgSkillActived, actived_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgSkillActived, lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgSkillActived, hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgSkillActived, gear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgSkillActived, effectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgSkillActived, effect_),
  };
  PBMsgHeroHouseList_PBMsgSkillActived_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBMsgHeroHouseList_PBMsgSkillActived_descriptor_,
      PBMsgHeroHouseList_PBMsgSkillActived::default_instance_,
      PBMsgHeroHouseList_PBMsgSkillActived_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgSkillActived, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgSkillActived, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBMsgHeroHouseList_PBMsgSkillActived));
  PBMsgHeroHouseList_PBMsgHero_descriptor_ = PBMsgHeroHouseList_descriptor_->nested_type(1);
  static const int PBMsgHeroHouseList_PBMsgHero_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, userheroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, renown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, nextrenown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, attack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, load_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, fate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, might_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, maxexplore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, explored_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, sleeptime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, cityindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, slot_),
  };
  PBMsgHeroHouseList_PBMsgHero_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBMsgHeroHouseList_PBMsgHero_descriptor_,
      PBMsgHeroHouseList_PBMsgHero::default_instance_,
      PBMsgHeroHouseList_PBMsgHero_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgHeroHouseList_PBMsgHero, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBMsgHeroHouseList_PBMsgHero));
  PBMsgHeroHouseList_PBMsgHeroStatus_descriptor_ = PBMsgHeroHouseList_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PBMsgHeroHouseList_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBMsgHeroHouseList_descriptor_, &PBMsgHeroHouseList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBMsgHeroHouseList_PBMsgSkillActived_descriptor_, &PBMsgHeroHouseList_PBMsgSkillActived::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBMsgHeroHouseList_PBMsgHero_descriptor_, &PBMsgHeroHouseList_PBMsgHero::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PBMsgHeroHouseList_2eproto() {
  delete PBMsgHeroHouseList::default_instance_;
  delete PBMsgHeroHouseList_reflection_;
  delete PBMsgHeroHouseList_PBMsgSkillActived::default_instance_;
  delete PBMsgHeroHouseList_PBMsgSkillActived_reflection_;
  delete PBMsgHeroHouseList_PBMsgHero::default_instance_;
  delete PBMsgHeroHouseList_PBMsgHero_reflection_;
}

void protobuf_AddDesc_PBMsgHeroHouseList_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030PBMsgHeroHouseList.proto\"\214\006\n\022PBMsgHero"
    "HouseList\022\026\n\016heroHouseSlots\030\001 \002(\005\022\023\n\013ope"
    "nnedSlot\030\002 \002(\005\022\026\n\016unlockSlotDesc\030\003 \003(\005\022+"
    "\n\004hero\030\004 \003(\0132\035.PBMsgHeroHouseList.PBMsgH"
    "ero\032z\n\021PBMsgSkillActived\022\n\n\002id\030\001 \002(\005\022\017\n\007"
    "actived\030\002 \002(\010\022\n\n\002lv\030\003 \001(\005\022\014\n\004hero\030\004 \001(\005\022"
    "\014\n\004gear\030\005 \001(\005\022\020\n\010effectId\030\006 \002(\005\022\016\n\006effec"
    "t\030\007 \003(\t\032\225\003\n\tPBMsgHero\022\022\n\nuserHeroId\030\001 \002("
    "\003\0223\n\006status\030\002 \002(\0162#.PBMsgHeroHouseList.P"
    "BMsgHeroStatus\022\016\n\006heroId\030\003 \002(\005\022\r\n\005level\030"
    "\004 \002(\005\022\016\n\006renown\030\005 \002(\005\022\022\n\nnextRenown\030\006 \002("
    "\005\022\016\n\006attack\030\007 \002(\005\022\n\n\002hp\030\010 \002(\005\022\014\n\004load\030\t "
    "\002(\005\0224\n\005skill\030\n \003(\0132%.PBMsgHeroHouseList."
    "PBMsgSkillActived\0223\n\004fate\030\013 \003(\0132%.PBMsgH"
    "eroHouseList.PBMsgSkillActived\022\r\n\005might\030"
    "\014 \002(\005\022\022\n\nmaxExplore\030\r \002(\005\022\020\n\010explored\030\016 "
    "\002(\005\022\021\n\tsleepTime\030\017 \002(\005\022\021\n\tcityIndex\030\020 \002("
    "\005\022\014\n\004slot\030\021 \002(\005\"p\n\017PBMsgHeroStatus\022\014\n\010UN"
    "LOCKED\020\001\022\026\n\022IN_CITY_DO_NOTHING\020\002\022\024\n\020IN_C"
    "ITY_IN_MARCH\020\003\022\021\n\rIN_CITY_SLEEP\020\004\022\016\n\nIN_"
    "NO_CITY\020\005", 809);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PBMsgHeroHouseList.proto", &protobuf_RegisterTypes);
  PBMsgHeroHouseList::default_instance_ = new PBMsgHeroHouseList();
  PBMsgHeroHouseList_PBMsgSkillActived::default_instance_ = new PBMsgHeroHouseList_PBMsgSkillActived();
  PBMsgHeroHouseList_PBMsgHero::default_instance_ = new PBMsgHeroHouseList_PBMsgHero();
  PBMsgHeroHouseList::default_instance_->InitAsDefaultInstance();
  PBMsgHeroHouseList_PBMsgSkillActived::default_instance_->InitAsDefaultInstance();
  PBMsgHeroHouseList_PBMsgHero::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PBMsgHeroHouseList_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PBMsgHeroHouseList_2eproto {
  StaticDescriptorInitializer_PBMsgHeroHouseList_2eproto() {
    protobuf_AddDesc_PBMsgHeroHouseList_2eproto();
  }
} static_descriptor_initializer_PBMsgHeroHouseList_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* PBMsgHeroHouseList_PBMsgHeroStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMsgHeroHouseList_PBMsgHeroStatus_descriptor_;
}
bool PBMsgHeroHouseList_PBMsgHeroStatus_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PBMsgHeroHouseList_PBMsgHeroStatus PBMsgHeroHouseList::UNLOCKED;
const PBMsgHeroHouseList_PBMsgHeroStatus PBMsgHeroHouseList::IN_CITY_DO_NOTHING;
const PBMsgHeroHouseList_PBMsgHeroStatus PBMsgHeroHouseList::IN_CITY_IN_MARCH;
const PBMsgHeroHouseList_PBMsgHeroStatus PBMsgHeroHouseList::IN_CITY_SLEEP;
const PBMsgHeroHouseList_PBMsgHeroStatus PBMsgHeroHouseList::IN_NO_CITY;
const PBMsgHeroHouseList_PBMsgHeroStatus PBMsgHeroHouseList::PBMsgHeroStatus_MIN;
const PBMsgHeroHouseList_PBMsgHeroStatus PBMsgHeroHouseList::PBMsgHeroStatus_MAX;
const int PBMsgHeroHouseList::PBMsgHeroStatus_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PBMsgHeroHouseList_PBMsgSkillActived::kIdFieldNumber;
const int PBMsgHeroHouseList_PBMsgSkillActived::kActivedFieldNumber;
const int PBMsgHeroHouseList_PBMsgSkillActived::kLvFieldNumber;
const int PBMsgHeroHouseList_PBMsgSkillActived::kHeroFieldNumber;
const int PBMsgHeroHouseList_PBMsgSkillActived::kGearFieldNumber;
const int PBMsgHeroHouseList_PBMsgSkillActived::kEffectIdFieldNumber;
const int PBMsgHeroHouseList_PBMsgSkillActived::kEffectFieldNumber;
#endif  // !_MSC_VER

PBMsgHeroHouseList_PBMsgSkillActived::PBMsgHeroHouseList_PBMsgSkillActived()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBMsgHeroHouseList_PBMsgSkillActived::InitAsDefaultInstance() {
}

PBMsgHeroHouseList_PBMsgSkillActived::PBMsgHeroHouseList_PBMsgSkillActived(const PBMsgHeroHouseList_PBMsgSkillActived& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBMsgHeroHouseList_PBMsgSkillActived::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  actived_ = false;
  lv_ = 0;
  hero_ = 0;
  gear_ = 0;
  effectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBMsgHeroHouseList_PBMsgSkillActived::~PBMsgHeroHouseList_PBMsgSkillActived() {
  SharedDtor();
}

void PBMsgHeroHouseList_PBMsgSkillActived::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBMsgHeroHouseList_PBMsgSkillActived::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMsgHeroHouseList_PBMsgSkillActived::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMsgHeroHouseList_PBMsgSkillActived_descriptor_;
}

const PBMsgHeroHouseList_PBMsgSkillActived& PBMsgHeroHouseList_PBMsgSkillActived::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PBMsgHeroHouseList_2eproto();
  return *default_instance_;
}

PBMsgHeroHouseList_PBMsgSkillActived* PBMsgHeroHouseList_PBMsgSkillActived::default_instance_ = NULL;

PBMsgHeroHouseList_PBMsgSkillActived* PBMsgHeroHouseList_PBMsgSkillActived::New() const {
  return new PBMsgHeroHouseList_PBMsgSkillActived;
}

void PBMsgHeroHouseList_PBMsgSkillActived::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    actived_ = false;
    lv_ = 0;
    hero_ = 0;
    gear_ = 0;
    effectid_ = 0;
  }
  effect_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBMsgHeroHouseList_PBMsgSkillActived::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_actived;
        break;
      }

      // required bool actived = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_actived:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &actived_)));
          set_has_actived();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_lv;
        break;
      }

      // optional int32 lv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lv_)));
          set_has_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_hero;
        break;
      }

      // optional int32 hero = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hero:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hero_)));
          set_has_hero();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_gear;
        break;
      }

      // optional int32 gear = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gear:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gear_)));
          set_has_gear();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_effectId;
        break;
      }

      // required int32 effectId = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_effectId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effectid_)));
          set_has_effectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_effect;
        break;
      }

      // repeated string effect = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_effect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_effect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->effect(this->effect_size() - 1).data(),
            this->effect(this->effect_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_effect;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBMsgHeroHouseList_PBMsgSkillActived::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required bool actived = 2;
  if (has_actived()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->actived(), output);
  }

  // optional int32 lv = 3;
  if (has_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lv(), output);
  }

  // optional int32 hero = 4;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hero(), output);
  }

  // optional int32 gear = 5;
  if (has_gear()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gear(), output);
  }

  // required int32 effectId = 6;
  if (has_effectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->effectid(), output);
  }

  // repeated string effect = 7;
  for (int i = 0; i < this->effect_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->effect(i).data(), this->effect(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->effect(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBMsgHeroHouseList_PBMsgSkillActived::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required bool actived = 2;
  if (has_actived()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->actived(), target);
  }

  // optional int32 lv = 3;
  if (has_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lv(), target);
  }

  // optional int32 hero = 4;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hero(), target);
  }

  // optional int32 gear = 5;
  if (has_gear()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gear(), target);
  }

  // required int32 effectId = 6;
  if (has_effectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->effectid(), target);
  }

  // repeated string effect = 7;
  for (int i = 0; i < this->effect_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effect(i).data(), this->effect(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->effect(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBMsgHeroHouseList_PBMsgSkillActived::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required bool actived = 2;
    if (has_actived()) {
      total_size += 1 + 1;
    }

    // optional int32 lv = 3;
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lv());
    }

    // optional int32 hero = 4;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hero());
    }

    // optional int32 gear = 5;
    if (has_gear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gear());
    }

    // required int32 effectId = 6;
    if (has_effectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effectid());
    }

  }
  // repeated string effect = 7;
  total_size += 1 * this->effect_size();
  for (int i = 0; i < this->effect_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->effect(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMsgHeroHouseList_PBMsgSkillActived::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBMsgHeroHouseList_PBMsgSkillActived* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBMsgHeroHouseList_PBMsgSkillActived*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBMsgHeroHouseList_PBMsgSkillActived::MergeFrom(const PBMsgHeroHouseList_PBMsgSkillActived& from) {
  GOOGLE_CHECK_NE(&from, this);
  effect_.MergeFrom(from.effect_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_actived()) {
      set_actived(from.actived());
    }
    if (from.has_lv()) {
      set_lv(from.lv());
    }
    if (from.has_hero()) {
      set_hero(from.hero());
    }
    if (from.has_gear()) {
      set_gear(from.gear());
    }
    if (from.has_effectid()) {
      set_effectid(from.effectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBMsgHeroHouseList_PBMsgSkillActived::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMsgHeroHouseList_PBMsgSkillActived::CopyFrom(const PBMsgHeroHouseList_PBMsgSkillActived& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMsgHeroHouseList_PBMsgSkillActived::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000023) != 0x00000023) return false;

  return true;
}

void PBMsgHeroHouseList_PBMsgSkillActived::Swap(PBMsgHeroHouseList_PBMsgSkillActived* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(actived_, other->actived_);
    std::swap(lv_, other->lv_);
    std::swap(hero_, other->hero_);
    std::swap(gear_, other->gear_);
    std::swap(effectid_, other->effectid_);
    effect_.Swap(&other->effect_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBMsgHeroHouseList_PBMsgSkillActived::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMsgHeroHouseList_PBMsgSkillActived_descriptor_;
  metadata.reflection = PBMsgHeroHouseList_PBMsgSkillActived_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PBMsgHeroHouseList_PBMsgHero::kUserHeroIdFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kStatusFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kHeroIdFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kLevelFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kRenownFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kNextRenownFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kAttackFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kHpFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kLoadFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kSkillFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kFateFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kMightFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kMaxExploreFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kExploredFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kSleepTimeFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kCityIndexFieldNumber;
const int PBMsgHeroHouseList_PBMsgHero::kSlotFieldNumber;
#endif  // !_MSC_VER

PBMsgHeroHouseList_PBMsgHero::PBMsgHeroHouseList_PBMsgHero()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBMsgHeroHouseList_PBMsgHero::InitAsDefaultInstance() {
}

PBMsgHeroHouseList_PBMsgHero::PBMsgHeroHouseList_PBMsgHero(const PBMsgHeroHouseList_PBMsgHero& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBMsgHeroHouseList_PBMsgHero::SharedCtor() {
  _cached_size_ = 0;
  userheroid_ = GOOGLE_LONGLONG(0);
  status_ = 1;
  heroid_ = 0;
  level_ = 0;
  renown_ = 0;
  nextrenown_ = 0;
  attack_ = 0;
  hp_ = 0;
  load_ = 0;
  might_ = 0;
  maxexplore_ = 0;
  explored_ = 0;
  sleeptime_ = 0;
  cityindex_ = 0;
  slot_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBMsgHeroHouseList_PBMsgHero::~PBMsgHeroHouseList_PBMsgHero() {
  SharedDtor();
}

void PBMsgHeroHouseList_PBMsgHero::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBMsgHeroHouseList_PBMsgHero::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMsgHeroHouseList_PBMsgHero::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMsgHeroHouseList_PBMsgHero_descriptor_;
}

const PBMsgHeroHouseList_PBMsgHero& PBMsgHeroHouseList_PBMsgHero::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PBMsgHeroHouseList_2eproto();
  return *default_instance_;
}

PBMsgHeroHouseList_PBMsgHero* PBMsgHeroHouseList_PBMsgHero::default_instance_ = NULL;

PBMsgHeroHouseList_PBMsgHero* PBMsgHeroHouseList_PBMsgHero::New() const {
  return new PBMsgHeroHouseList_PBMsgHero;
}

void PBMsgHeroHouseList_PBMsgHero::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    userheroid_ = GOOGLE_LONGLONG(0);
    status_ = 1;
    heroid_ = 0;
    level_ = 0;
    renown_ = 0;
    nextrenown_ = 0;
    attack_ = 0;
    hp_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    load_ = 0;
    might_ = 0;
    maxexplore_ = 0;
    explored_ = 0;
    sleeptime_ = 0;
    cityindex_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    slot_ = 0;
  }
  skill_.Clear();
  fate_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBMsgHeroHouseList_PBMsgHero::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 userHeroId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userheroid_)));
          set_has_userheroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required .PBMsgHeroHouseList.PBMsgHeroStatus status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMsgHeroHouseList_PBMsgHeroStatus_IsValid(value)) {
            set_status(static_cast< ::PBMsgHeroHouseList_PBMsgHeroStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_heroId;
        break;
      }

      // required int32 heroId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_level;
        break;
      }

      // required int32 level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_renown;
        break;
      }

      // required int32 renown = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_renown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &renown_)));
          set_has_renown();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_nextRenown;
        break;
      }

      // required int32 nextRenown = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nextRenown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextrenown_)));
          set_has_nextrenown();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_attack;
        break;
      }

      // required int32 attack = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_)));
          set_has_attack();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_hp;
        break;
      }

      // required int32 hp = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_load;
        break;
      }

      // required int32 load = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_load:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &load_)));
          set_has_load();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_skill;
        break;
      }

      // repeated .PBMsgHeroHouseList.PBMsgSkillActived skill = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skill()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_skill;
        if (input->ExpectTag(90)) goto parse_fate;
        break;
      }

      // repeated .PBMsgHeroHouseList.PBMsgSkillActived fate = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_fate;
        if (input->ExpectTag(96)) goto parse_might;
        break;
      }

      // required int32 might = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_might:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &might_)));
          set_has_might();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_maxExplore;
        break;
      }

      // required int32 maxExplore = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxExplore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxexplore_)));
          set_has_maxexplore();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_explored;
        break;
      }

      // required int32 explored = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_explored:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &explored_)));
          set_has_explored();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_sleepTime;
        break;
      }

      // required int32 sleepTime = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sleepTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sleeptime_)));
          set_has_sleeptime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_cityIndex;
        break;
      }

      // required int32 cityIndex = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cityIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cityindex_)));
          set_has_cityindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_slot;
        break;
      }

      // required int32 slot = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBMsgHeroHouseList_PBMsgHero::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 userHeroId = 1;
  if (has_userheroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->userheroid(), output);
  }

  // required .PBMsgHeroHouseList.PBMsgHeroStatus status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // required int32 heroId = 3;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->heroid(), output);
  }

  // required int32 level = 4;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // required int32 renown = 5;
  if (has_renown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->renown(), output);
  }

  // required int32 nextRenown = 6;
  if (has_nextrenown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->nextrenown(), output);
  }

  // required int32 attack = 7;
  if (has_attack()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->attack(), output);
  }

  // required int32 hp = 8;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->hp(), output);
  }

  // required int32 load = 9;
  if (has_load()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->load(), output);
  }

  // repeated .PBMsgHeroHouseList.PBMsgSkillActived skill = 10;
  for (int i = 0; i < this->skill_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->skill(i), output);
  }

  // repeated .PBMsgHeroHouseList.PBMsgSkillActived fate = 11;
  for (int i = 0; i < this->fate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->fate(i), output);
  }

  // required int32 might = 12;
  if (has_might()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->might(), output);
  }

  // required int32 maxExplore = 13;
  if (has_maxexplore()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->maxexplore(), output);
  }

  // required int32 explored = 14;
  if (has_explored()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->explored(), output);
  }

  // required int32 sleepTime = 15;
  if (has_sleeptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->sleeptime(), output);
  }

  // required int32 cityIndex = 16;
  if (has_cityindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->cityindex(), output);
  }

  // required int32 slot = 17;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->slot(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBMsgHeroHouseList_PBMsgHero::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 userHeroId = 1;
  if (has_userheroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->userheroid(), target);
  }

  // required .PBMsgHeroHouseList.PBMsgHeroStatus status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // required int32 heroId = 3;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->heroid(), target);
  }

  // required int32 level = 4;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // required int32 renown = 5;
  if (has_renown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->renown(), target);
  }

  // required int32 nextRenown = 6;
  if (has_nextrenown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->nextrenown(), target);
  }

  // required int32 attack = 7;
  if (has_attack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->attack(), target);
  }

  // required int32 hp = 8;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->hp(), target);
  }

  // required int32 load = 9;
  if (has_load()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->load(), target);
  }

  // repeated .PBMsgHeroHouseList.PBMsgSkillActived skill = 10;
  for (int i = 0; i < this->skill_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->skill(i), target);
  }

  // repeated .PBMsgHeroHouseList.PBMsgSkillActived fate = 11;
  for (int i = 0; i < this->fate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->fate(i), target);
  }

  // required int32 might = 12;
  if (has_might()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->might(), target);
  }

  // required int32 maxExplore = 13;
  if (has_maxexplore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->maxexplore(), target);
  }

  // required int32 explored = 14;
  if (has_explored()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->explored(), target);
  }

  // required int32 sleepTime = 15;
  if (has_sleeptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->sleeptime(), target);
  }

  // required int32 cityIndex = 16;
  if (has_cityindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->cityindex(), target);
  }

  // required int32 slot = 17;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->slot(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBMsgHeroHouseList_PBMsgHero::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 userHeroId = 1;
    if (has_userheroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->userheroid());
    }

    // required .PBMsgHeroHouseList.PBMsgHeroStatus status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // required int32 heroId = 3;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroid());
    }

    // required int32 level = 4;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // required int32 renown = 5;
    if (has_renown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->renown());
    }

    // required int32 nextRenown = 6;
    if (has_nextrenown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nextrenown());
    }

    // required int32 attack = 7;
    if (has_attack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attack());
    }

    // required int32 hp = 8;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hp());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 load = 9;
    if (has_load()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->load());
    }

    // required int32 might = 12;
    if (has_might()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->might());
    }

    // required int32 maxExplore = 13;
    if (has_maxexplore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxexplore());
    }

    // required int32 explored = 14;
    if (has_explored()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->explored());
    }

    // required int32 sleepTime = 15;
    if (has_sleeptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sleeptime());
    }

    // required int32 cityIndex = 16;
    if (has_cityindex()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cityindex());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required int32 slot = 17;
    if (has_slot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot());
    }

  }
  // repeated .PBMsgHeroHouseList.PBMsgSkillActived skill = 10;
  total_size += 1 * this->skill_size();
  for (int i = 0; i < this->skill_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skill(i));
  }

  // repeated .PBMsgHeroHouseList.PBMsgSkillActived fate = 11;
  total_size += 1 * this->fate_size();
  for (int i = 0; i < this->fate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fate(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMsgHeroHouseList_PBMsgHero::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBMsgHeroHouseList_PBMsgHero* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBMsgHeroHouseList_PBMsgHero*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBMsgHeroHouseList_PBMsgHero::MergeFrom(const PBMsgHeroHouseList_PBMsgHero& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_.MergeFrom(from.skill_);
  fate_.MergeFrom(from.fate_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userheroid()) {
      set_userheroid(from.userheroid());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_renown()) {
      set_renown(from.renown());
    }
    if (from.has_nextrenown()) {
      set_nextrenown(from.nextrenown());
    }
    if (from.has_attack()) {
      set_attack(from.attack());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_load()) {
      set_load(from.load());
    }
    if (from.has_might()) {
      set_might(from.might());
    }
    if (from.has_maxexplore()) {
      set_maxexplore(from.maxexplore());
    }
    if (from.has_explored()) {
      set_explored(from.explored());
    }
    if (from.has_sleeptime()) {
      set_sleeptime(from.sleeptime());
    }
    if (from.has_cityindex()) {
      set_cityindex(from.cityindex());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_slot()) {
      set_slot(from.slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBMsgHeroHouseList_PBMsgHero::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMsgHeroHouseList_PBMsgHero::CopyFrom(const PBMsgHeroHouseList_PBMsgHero& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMsgHeroHouseList_PBMsgHero::IsInitialized() const {
  if ((_has_bits_[0] & 0x0001f9ff) != 0x0001f9ff) return false;

  for (int i = 0; i < skill_size(); i++) {
    if (!this->skill(i).IsInitialized()) return false;
  }
  for (int i = 0; i < fate_size(); i++) {
    if (!this->fate(i).IsInitialized()) return false;
  }
  return true;
}

void PBMsgHeroHouseList_PBMsgHero::Swap(PBMsgHeroHouseList_PBMsgHero* other) {
  if (other != this) {
    std::swap(userheroid_, other->userheroid_);
    std::swap(status_, other->status_);
    std::swap(heroid_, other->heroid_);
    std::swap(level_, other->level_);
    std::swap(renown_, other->renown_);
    std::swap(nextrenown_, other->nextrenown_);
    std::swap(attack_, other->attack_);
    std::swap(hp_, other->hp_);
    std::swap(load_, other->load_);
    skill_.Swap(&other->skill_);
    fate_.Swap(&other->fate_);
    std::swap(might_, other->might_);
    std::swap(maxexplore_, other->maxexplore_);
    std::swap(explored_, other->explored_);
    std::swap(sleeptime_, other->sleeptime_);
    std::swap(cityindex_, other->cityindex_);
    std::swap(slot_, other->slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBMsgHeroHouseList_PBMsgHero::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMsgHeroHouseList_PBMsgHero_descriptor_;
  metadata.reflection = PBMsgHeroHouseList_PBMsgHero_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PBMsgHeroHouseList::kHeroHouseSlotsFieldNumber;
const int PBMsgHeroHouseList::kOpennedSlotFieldNumber;
const int PBMsgHeroHouseList::kUnlockSlotDescFieldNumber;
const int PBMsgHeroHouseList::kHeroFieldNumber;
#endif  // !_MSC_VER

PBMsgHeroHouseList::PBMsgHeroHouseList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBMsgHeroHouseList::InitAsDefaultInstance() {
}

PBMsgHeroHouseList::PBMsgHeroHouseList(const PBMsgHeroHouseList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBMsgHeroHouseList::SharedCtor() {
  _cached_size_ = 0;
  herohouseslots_ = 0;
  opennedslot_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBMsgHeroHouseList::~PBMsgHeroHouseList() {
  SharedDtor();
}

void PBMsgHeroHouseList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBMsgHeroHouseList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMsgHeroHouseList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMsgHeroHouseList_descriptor_;
}

const PBMsgHeroHouseList& PBMsgHeroHouseList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PBMsgHeroHouseList_2eproto();
  return *default_instance_;
}

PBMsgHeroHouseList* PBMsgHeroHouseList::default_instance_ = NULL;

PBMsgHeroHouseList* PBMsgHeroHouseList::New() const {
  return new PBMsgHeroHouseList;
}

void PBMsgHeroHouseList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    herohouseslots_ = 0;
    opennedslot_ = 0;
  }
  unlockslotdesc_.Clear();
  hero_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBMsgHeroHouseList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 heroHouseSlots = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &herohouseslots_)));
          set_has_herohouseslots();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_opennedSlot;
        break;
      }

      // required int32 opennedSlot = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_opennedSlot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opennedslot_)));
          set_has_opennedslot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_unlockSlotDesc;
        break;
      }

      // repeated int32 unlockSlotDesc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unlockSlotDesc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_unlockslotdesc())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unlockslotdesc())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_unlockSlotDesc;
        if (input->ExpectTag(34)) goto parse_hero;
        break;
      }

      // repeated .PBMsgHeroHouseList.PBMsgHero hero = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_hero;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBMsgHeroHouseList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 heroHouseSlots = 1;
  if (has_herohouseslots()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->herohouseslots(), output);
  }

  // required int32 opennedSlot = 2;
  if (has_opennedslot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->opennedslot(), output);
  }

  // repeated int32 unlockSlotDesc = 3;
  for (int i = 0; i < this->unlockslotdesc_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->unlockslotdesc(i), output);
  }

  // repeated .PBMsgHeroHouseList.PBMsgHero hero = 4;
  for (int i = 0; i < this->hero_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->hero(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBMsgHeroHouseList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 heroHouseSlots = 1;
  if (has_herohouseslots()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->herohouseslots(), target);
  }

  // required int32 opennedSlot = 2;
  if (has_opennedslot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->opennedslot(), target);
  }

  // repeated int32 unlockSlotDesc = 3;
  for (int i = 0; i < this->unlockslotdesc_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->unlockslotdesc(i), target);
  }

  // repeated .PBMsgHeroHouseList.PBMsgHero hero = 4;
  for (int i = 0; i < this->hero_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->hero(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBMsgHeroHouseList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 heroHouseSlots = 1;
    if (has_herohouseslots()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->herohouseslots());
    }

    // required int32 opennedSlot = 2;
    if (has_opennedslot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opennedslot());
    }

  }
  // repeated int32 unlockSlotDesc = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->unlockslotdesc_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unlockslotdesc(i));
    }
    total_size += 1 * this->unlockslotdesc_size() + data_size;
  }

  // repeated .PBMsgHeroHouseList.PBMsgHero hero = 4;
  total_size += 1 * this->hero_size();
  for (int i = 0; i < this->hero_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hero(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMsgHeroHouseList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBMsgHeroHouseList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBMsgHeroHouseList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBMsgHeroHouseList::MergeFrom(const PBMsgHeroHouseList& from) {
  GOOGLE_CHECK_NE(&from, this);
  unlockslotdesc_.MergeFrom(from.unlockslotdesc_);
  hero_.MergeFrom(from.hero_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_herohouseslots()) {
      set_herohouseslots(from.herohouseslots());
    }
    if (from.has_opennedslot()) {
      set_opennedslot(from.opennedslot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBMsgHeroHouseList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMsgHeroHouseList::CopyFrom(const PBMsgHeroHouseList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMsgHeroHouseList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < hero_size(); i++) {
    if (!this->hero(i).IsInitialized()) return false;
  }
  return true;
}

void PBMsgHeroHouseList::Swap(PBMsgHeroHouseList* other) {
  if (other != this) {
    std::swap(herohouseslots_, other->herohouseslots_);
    std::swap(opennedslot_, other->opennedslot_);
    unlockslotdesc_.Swap(&other->unlockslotdesc_);
    hero_.Swap(&other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBMsgHeroHouseList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMsgHeroHouseList_descriptor_;
  metadata.reflection = PBMsgHeroHouseList_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
