// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PBMsgUpdateSeed.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PBMsgUpdateSeed.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PBMsgUpdateSeed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMsgUpdateSeed_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBMsgUpdateSeed_PveData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMsgUpdateSeed_PveData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBMsgUpdateSeed_HeroData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMsgUpdateSeed_HeroData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PBMsgUpdateSeed_2eproto() {
  protobuf_AddDesc_PBMsgUpdateSeed_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PBMsgUpdateSeed.proto");
  GOOGLE_CHECK(file != NULL);
  PBMsgUpdateSeed_descriptor_ = file->message_type(0);
  static const int PBMsgUpdateSeed_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgUpdateSeed, pvemd5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgUpdateSeed, pvedata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgUpdateSeed, heromd5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgUpdateSeed, herodata_),
  };
  PBMsgUpdateSeed_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBMsgUpdateSeed_descriptor_,
      PBMsgUpdateSeed::default_instance_,
      PBMsgUpdateSeed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgUpdateSeed, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgUpdateSeed, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBMsgUpdateSeed));
  PBMsgUpdateSeed_PveData_descriptor_ = PBMsgUpdateSeed_descriptor_->nested_type(0);
  static const int PBMsgUpdateSeed_PveData_offsets_[1] = {
  };
  PBMsgUpdateSeed_PveData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBMsgUpdateSeed_PveData_descriptor_,
      PBMsgUpdateSeed_PveData::default_instance_,
      PBMsgUpdateSeed_PveData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgUpdateSeed_PveData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgUpdateSeed_PveData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBMsgUpdateSeed_PveData));
  PBMsgUpdateSeed_HeroData_descriptor_ = PBMsgUpdateSeed_descriptor_->nested_type(1);
  static const int PBMsgUpdateSeed_HeroData_offsets_[1] = {
  };
  PBMsgUpdateSeed_HeroData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBMsgUpdateSeed_HeroData_descriptor_,
      PBMsgUpdateSeed_HeroData::default_instance_,
      PBMsgUpdateSeed_HeroData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgUpdateSeed_HeroData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgUpdateSeed_HeroData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBMsgUpdateSeed_HeroData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PBMsgUpdateSeed_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBMsgUpdateSeed_descriptor_, &PBMsgUpdateSeed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBMsgUpdateSeed_PveData_descriptor_, &PBMsgUpdateSeed_PveData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBMsgUpdateSeed_HeroData_descriptor_, &PBMsgUpdateSeed_HeroData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PBMsgUpdateSeed_2eproto() {
  delete PBMsgUpdateSeed::default_instance_;
  delete PBMsgUpdateSeed_reflection_;
  delete PBMsgUpdateSeed_PveData::default_instance_;
  delete PBMsgUpdateSeed_PveData_reflection_;
  delete PBMsgUpdateSeed_HeroData::default_instance_;
  delete PBMsgUpdateSeed_HeroData_reflection_;
}

void protobuf_AddDesc_PBMsgUpdateSeed_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025PBMsgUpdateSeed.proto\"\241\001\n\017PBMsgUpdateS"
    "eed\022\016\n\006pveMd5\030\001 \001(\t\022)\n\007pveData\030\002 \001(\0132\030.P"
    "BMsgUpdateSeed.PveData\022\017\n\007heroMd5\030\003 \001(\t\022"
    "+\n\010heroData\030\004 \001(\0132\031.PBMsgUpdateSeed.Hero"
    "Data\032\t\n\007PveData\032\n\n\010HeroData", 187);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PBMsgUpdateSeed.proto", &protobuf_RegisterTypes);
  PBMsgUpdateSeed::default_instance_ = new PBMsgUpdateSeed();
  PBMsgUpdateSeed_PveData::default_instance_ = new PBMsgUpdateSeed_PveData();
  PBMsgUpdateSeed_HeroData::default_instance_ = new PBMsgUpdateSeed_HeroData();
  PBMsgUpdateSeed::default_instance_->InitAsDefaultInstance();
  PBMsgUpdateSeed_PveData::default_instance_->InitAsDefaultInstance();
  PBMsgUpdateSeed_HeroData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PBMsgUpdateSeed_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PBMsgUpdateSeed_2eproto {
  StaticDescriptorInitializer_PBMsgUpdateSeed_2eproto() {
    protobuf_AddDesc_PBMsgUpdateSeed_2eproto();
  }
} static_descriptor_initializer_PBMsgUpdateSeed_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PBMsgUpdateSeed_PveData::PBMsgUpdateSeed_PveData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBMsgUpdateSeed_PveData::InitAsDefaultInstance() {
}

PBMsgUpdateSeed_PveData::PBMsgUpdateSeed_PveData(const PBMsgUpdateSeed_PveData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBMsgUpdateSeed_PveData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBMsgUpdateSeed_PveData::~PBMsgUpdateSeed_PveData() {
  SharedDtor();
}

void PBMsgUpdateSeed_PveData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBMsgUpdateSeed_PveData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMsgUpdateSeed_PveData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMsgUpdateSeed_PveData_descriptor_;
}

const PBMsgUpdateSeed_PveData& PBMsgUpdateSeed_PveData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PBMsgUpdateSeed_2eproto();
  return *default_instance_;
}

PBMsgUpdateSeed_PveData* PBMsgUpdateSeed_PveData::default_instance_ = NULL;

PBMsgUpdateSeed_PveData* PBMsgUpdateSeed_PveData::New() const {
  return new PBMsgUpdateSeed_PveData;
}

void PBMsgUpdateSeed_PveData::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBMsgUpdateSeed_PveData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PBMsgUpdateSeed_PveData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBMsgUpdateSeed_PveData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBMsgUpdateSeed_PveData::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMsgUpdateSeed_PveData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBMsgUpdateSeed_PveData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBMsgUpdateSeed_PveData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBMsgUpdateSeed_PveData::MergeFrom(const PBMsgUpdateSeed_PveData& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBMsgUpdateSeed_PveData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMsgUpdateSeed_PveData::CopyFrom(const PBMsgUpdateSeed_PveData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMsgUpdateSeed_PveData::IsInitialized() const {

  return true;
}

void PBMsgUpdateSeed_PveData::Swap(PBMsgUpdateSeed_PveData* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBMsgUpdateSeed_PveData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMsgUpdateSeed_PveData_descriptor_;
  metadata.reflection = PBMsgUpdateSeed_PveData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

PBMsgUpdateSeed_HeroData::PBMsgUpdateSeed_HeroData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBMsgUpdateSeed_HeroData::InitAsDefaultInstance() {
}

PBMsgUpdateSeed_HeroData::PBMsgUpdateSeed_HeroData(const PBMsgUpdateSeed_HeroData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBMsgUpdateSeed_HeroData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBMsgUpdateSeed_HeroData::~PBMsgUpdateSeed_HeroData() {
  SharedDtor();
}

void PBMsgUpdateSeed_HeroData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBMsgUpdateSeed_HeroData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMsgUpdateSeed_HeroData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMsgUpdateSeed_HeroData_descriptor_;
}

const PBMsgUpdateSeed_HeroData& PBMsgUpdateSeed_HeroData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PBMsgUpdateSeed_2eproto();
  return *default_instance_;
}

PBMsgUpdateSeed_HeroData* PBMsgUpdateSeed_HeroData::default_instance_ = NULL;

PBMsgUpdateSeed_HeroData* PBMsgUpdateSeed_HeroData::New() const {
  return new PBMsgUpdateSeed_HeroData;
}

void PBMsgUpdateSeed_HeroData::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBMsgUpdateSeed_HeroData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PBMsgUpdateSeed_HeroData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBMsgUpdateSeed_HeroData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBMsgUpdateSeed_HeroData::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMsgUpdateSeed_HeroData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBMsgUpdateSeed_HeroData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBMsgUpdateSeed_HeroData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBMsgUpdateSeed_HeroData::MergeFrom(const PBMsgUpdateSeed_HeroData& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBMsgUpdateSeed_HeroData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMsgUpdateSeed_HeroData::CopyFrom(const PBMsgUpdateSeed_HeroData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMsgUpdateSeed_HeroData::IsInitialized() const {

  return true;
}

void PBMsgUpdateSeed_HeroData::Swap(PBMsgUpdateSeed_HeroData* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBMsgUpdateSeed_HeroData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMsgUpdateSeed_HeroData_descriptor_;
  metadata.reflection = PBMsgUpdateSeed_HeroData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PBMsgUpdateSeed::kPveMd5FieldNumber;
const int PBMsgUpdateSeed::kPveDataFieldNumber;
const int PBMsgUpdateSeed::kHeroMd5FieldNumber;
const int PBMsgUpdateSeed::kHeroDataFieldNumber;
#endif  // !_MSC_VER

PBMsgUpdateSeed::PBMsgUpdateSeed()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBMsgUpdateSeed::InitAsDefaultInstance() {
  pvedata_ = const_cast< ::PBMsgUpdateSeed_PveData*>(&::PBMsgUpdateSeed_PveData::default_instance());
  herodata_ = const_cast< ::PBMsgUpdateSeed_HeroData*>(&::PBMsgUpdateSeed_HeroData::default_instance());
}

PBMsgUpdateSeed::PBMsgUpdateSeed(const PBMsgUpdateSeed& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBMsgUpdateSeed::SharedCtor() {
  _cached_size_ = 0;
  pvemd5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pvedata_ = NULL;
  heromd5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  herodata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBMsgUpdateSeed::~PBMsgUpdateSeed() {
  SharedDtor();
}

void PBMsgUpdateSeed::SharedDtor() {
  if (pvemd5_ != &::google::protobuf::internal::kEmptyString) {
    delete pvemd5_;
  }
  if (heromd5_ != &::google::protobuf::internal::kEmptyString) {
    delete heromd5_;
  }
  if (this != default_instance_) {
    delete pvedata_;
    delete herodata_;
  }
}

void PBMsgUpdateSeed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMsgUpdateSeed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMsgUpdateSeed_descriptor_;
}

const PBMsgUpdateSeed& PBMsgUpdateSeed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PBMsgUpdateSeed_2eproto();
  return *default_instance_;
}

PBMsgUpdateSeed* PBMsgUpdateSeed::default_instance_ = NULL;

PBMsgUpdateSeed* PBMsgUpdateSeed::New() const {
  return new PBMsgUpdateSeed;
}

void PBMsgUpdateSeed::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_pvemd5()) {
      if (pvemd5_ != &::google::protobuf::internal::kEmptyString) {
        pvemd5_->clear();
      }
    }
    if (has_pvedata()) {
      if (pvedata_ != NULL) pvedata_->::PBMsgUpdateSeed_PveData::Clear();
    }
    if (has_heromd5()) {
      if (heromd5_ != &::google::protobuf::internal::kEmptyString) {
        heromd5_->clear();
      }
    }
    if (has_herodata()) {
      if (herodata_ != NULL) herodata_->::PBMsgUpdateSeed_HeroData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBMsgUpdateSeed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pveMd5 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pvemd5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->pvemd5().data(), this->pvemd5().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_pveData;
        break;
      }

      // optional .PBMsgUpdateSeed.PveData pveData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pveData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pvedata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_heroMd5;
        break;
      }

      // optional string heroMd5 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_heroMd5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_heromd5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->heromd5().data(), this->heromd5().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_heroData;
        break;
      }

      // optional .PBMsgUpdateSeed.HeroData heroData = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_heroData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_herodata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBMsgUpdateSeed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string pveMd5 = 1;
  if (has_pvemd5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pvemd5().data(), this->pvemd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->pvemd5(), output);
  }

  // optional .PBMsgUpdateSeed.PveData pveData = 2;
  if (has_pvedata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pvedata(), output);
  }

  // optional string heroMd5 = 3;
  if (has_heromd5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->heromd5().data(), this->heromd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->heromd5(), output);
  }

  // optional .PBMsgUpdateSeed.HeroData heroData = 4;
  if (has_herodata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->herodata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBMsgUpdateSeed::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string pveMd5 = 1;
  if (has_pvemd5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pvemd5().data(), this->pvemd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pvemd5(), target);
  }

  // optional .PBMsgUpdateSeed.PveData pveData = 2;
  if (has_pvedata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->pvedata(), target);
  }

  // optional string heroMd5 = 3;
  if (has_heromd5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->heromd5().data(), this->heromd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->heromd5(), target);
  }

  // optional .PBMsgUpdateSeed.HeroData heroData = 4;
  if (has_herodata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->herodata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBMsgUpdateSeed::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string pveMd5 = 1;
    if (has_pvemd5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pvemd5());
    }

    // optional .PBMsgUpdateSeed.PveData pveData = 2;
    if (has_pvedata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pvedata());
    }

    // optional string heroMd5 = 3;
    if (has_heromd5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->heromd5());
    }

    // optional .PBMsgUpdateSeed.HeroData heroData = 4;
    if (has_herodata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->herodata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMsgUpdateSeed::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBMsgUpdateSeed* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBMsgUpdateSeed*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBMsgUpdateSeed::MergeFrom(const PBMsgUpdateSeed& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pvemd5()) {
      set_pvemd5(from.pvemd5());
    }
    if (from.has_pvedata()) {
      mutable_pvedata()->::PBMsgUpdateSeed_PveData::MergeFrom(from.pvedata());
    }
    if (from.has_heromd5()) {
      set_heromd5(from.heromd5());
    }
    if (from.has_herodata()) {
      mutable_herodata()->::PBMsgUpdateSeed_HeroData::MergeFrom(from.herodata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBMsgUpdateSeed::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMsgUpdateSeed::CopyFrom(const PBMsgUpdateSeed& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMsgUpdateSeed::IsInitialized() const {

  return true;
}

void PBMsgUpdateSeed::Swap(PBMsgUpdateSeed* other) {
  if (other != this) {
    std::swap(pvemd5_, other->pvemd5_);
    std::swap(pvedata_, other->pvedata_);
    std::swap(heromd5_, other->heromd5_);
    std::swap(herodata_, other->herodata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBMsgUpdateSeed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMsgUpdateSeed_descriptor_;
  metadata.reflection = PBMsgUpdateSeed_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
